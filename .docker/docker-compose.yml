version: "3.3"


services:
    nginx:
        container_name: nginx
        image: nginx:1.17-alpine
        restart: on-failure
        volumes:
            - "./conf/nginx/nginx.conf:/etc/nginx/nginx.conf:ro"
            - "./conf/nginx/common.conf:/etc/nginx/common.conf:ro"
            - "./conf/nginx/server.conf:/etc/nginx/server.conf:ro"
            -   type: volume
                source: v-static
                target: /application/static
                read_only: true
                volume:
                    nocopy: true
            -   type: volume
                source: v-media
                target: /application/media
                read_only: true
                volume:
                    nocopy: true
        networks:
            - nginx-net
        ports:
            - "8000:80"
        depends_on:
            - backend

    database:
        container_name: database
        image: postgres:12
        env_file:
            - "./conf/common.env"
        #        environment:
        #            POSTGRES_MULTIPLE_DATABASES: ${DATABASE_NAME}
        #            POSTGRES_USER: ${DATABASE_USER}
        #            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
        volumes:
            - "./conf/postgres:/docker-entrypoint-initdb.d"
            - "./conf/postgres/postgresql.conf:/etc/postgresql/postgresql.conf"
            - "v-database:/var/lib/postgresql/data"
        networks:
            - db-net
        ports:
            - "5432:5432"

    backend:
        container_name: backend
        build:
            context: ../.
            dockerfile: ./.docker/Dockerfile
        image: backend:latest
        command: "sh .docker/conf/gunicorn/django-dev.sh"
        volumes:
            - ../.:/application
            - v-media:/application/media
            - v-static:/application/static
        working_dir: /application
        depends_on:
            - database
        env_file:
            - "conf/common.env"
            - "conf/server.env"
        environment:
            PYTHONUNBUFFERED: 1
        expose:
            - "8080"
        networks:
            - db-net
            - nginx-net


    redis:
        image: redis:5.0.6-alpine
        networks:
            - db-net

    beat:
        image: backend:latest
        command: "celery -A celery_app beat"
        env_file:
            - "conf/common.env"
            - "conf/server.env"
        networks:
            - db-net
        ports:
            - "7999:7999"
        depends_on:
            - database
            - redis
            - backend

networks:
    db-net:
    nginx-net:

volumes:
    v-database:
    v-redis:
    v-static:
    v-media:
